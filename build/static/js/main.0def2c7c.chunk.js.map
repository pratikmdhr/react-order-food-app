{"version":3,"sources":["components/Cart/Checkout.module.css","components/Cart/Cart.module.css","components/Cart/CartItem.module.css","components/Layout/HeaderCartButton.module.css","components/Meals/MealItem/MealItem.module.css","components/Meals/AvailableMeals.module.css","components/Layout/Header.module.css","components/UI/Modal/Modal.module.css","assets/meals.jpg","components/Meals/MealsSummary.module.css","components/UI/Card/Card.module.css","components/UI/Input/Input.module.css","components/Meals/MealItem/MealItemForm.module.css","store/cart-context.js","components/Cart/CartIcon.js","components/Layout/HeaderCartButton.js","components/Layout/Header.js","components/Meals/MealsSummary.js","components/UI/Card/Card.js","components/UI/Input/Input.js","components/Meals/MealItem/MealItemForm.js","components/Meals/MealItem/MealItem.js","components/Meals/AvailableMeals.js","components/Meals/Meals.js","components/UI/Modal/Modal.js","components/Cart/CartItem.js","components/hooks/use-input.js","components/Cart/Checkout.js","components/Cart/Cart.js","App.js","store/CartProvider.js","index.js"],"names":["module","exports","CartContext","React","createContext","showCart","onShowCart","onHideCart","menuItems","isLoading","httpErrorMsg","clearCart","cartItems","totalAmount","addItem","item","removeItem","id","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","props","cartCtx","useContext","useState","bumpAnimation","setBumpAnimation","numberOfCartItems","reduce","curNumber","displayQuantity","useEffect","timer","setTimeout","clearTimeout","btnClasses","classes","button","bump","onClick","className","icon","badge","Header","header","src","mealsImage","alt","MealsSummary","summary","Card","card","children","Input","forwardRef","ref","input","htmlFor","label","MealItemForm","quantityIsValid","SetQuantityIsValid","quantityInputRef","useRef","form","onSubmit","e","preventDefault","enteredQuantity","current","value","enteredQuantityNumber","trim","length","onAddToCart","type","min","max","step","defaultValue","MealItem","name","description","price","meal","toFixed","quantity","AvailableMeals","mealsCtx","MealsLoading","MealsError","mealsList","map","key","meals","Meals","Backdrop","backdrop","ModalOverlay","modal","portalBackdropEl","document","querySelector","portalOverlayEl","Modal","reactDom","createPortal","CartItem","actions","onRemove","onAdd","initialInputState","enteredData","isTouched","inputStateReducer","state","action","useInput","checkValidity","useReducer","inputState","dispatch","enteredDataIsValid","hasError","inputChangeHandler","target","inputBlurHandler","inputTouched","reset","isNotEmpty","isSixChars","Checkout","enteredName","enteredNameIsValid","nameInputIsInvalid","inputNameChangeHandler","inputNameBlurHandler","nameInputTouched","resetName","enteredStreet","enteredStreetIsValid","streetInputIsInvalid","inputStreetChangeHandler","inputStreetBlurHandler","streetInputTouched","resetStreet","enteredPostalCode","enteredPostalCodeIsValid","postalCodeInputIsInvalid","inputPostalCodeChangeHandler","inputPostalCodeBlurHandler","postalCodeInputTouched","resetPostalCode","enteredCity","enteredCityIsValid","cityInputIsInvalid","inputCityChangeHandler","inputCityBlurHandler","cityInputTouched","resetCity","formIsValid","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","onConfirm","street","city","postalCode","console","log","onChange","onBlur","onCancel","submit","Cart","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","hasItems","cartItemRemoveHandler","cartItemAddHandler","submitOrderHandler","userData","a","fetch","method","body","JSON","stringify","user","orderedItems","bind","modalActions","cartModalContent","total","isSubmittingModalContent","didSubmitModalContent","App","initializeCartState","items","cartReducer","updatedItems","addedItemIndex","findIndex","updatedItem","concat","updatedTotalAmount","splice","CartProvider","storedCartState","parse","localStorage","getItem","defaultCartState","cartState","dispatchCartAction","setItem","setShowCart","setIsLoading","setHttpErrorMsg","menu","setMenu","response","ok","Error","json","responseData","loadedMeals","push","fetchMenu","catch","error","message","cartContext","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0def2c7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__26gr1\",\"control\":\"Checkout_control__2qGfb\",\"actions\":\"Checkout_actions__2X_6_\",\"submit\":\"Checkout_submit__2BFZZ\",\"invalid\":\"Checkout_invalid__2gAN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__2pjQw\",\"total\":\"Cart_total__3pLin\",\"actions\":\"Cart_actions__1GOmr\",\"button--alt\":\"Cart_button--alt__1Z2QQ\",\"button\":\"Cart_button__fw1-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1B1_q\",\"summary\":\"CartItem_summary__3FMDj\",\"price\":\"CartItem_price__2Nl0j\",\"quantity\":\"CartItem_quantity__DfEXm\",\"actions\":\"CartItem_actions__UwVPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3CMOT\",\"icon\":\"HeaderCartButton_icon__9KWtg\",\"badge\":\"HeaderCartButton_badge__1Z3gL\",\"bump\":\"HeaderCartButton_bump__3atD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__2uJ70\",\"description\":\"MealItem_description__2YINS\",\"price\":\"MealItem_price__3sNYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__2ZLCP\",\"meals-appear\":\"AvailableMeals_meals-appear__ONwLi\",\"MealsLoading\":\"AvailableMeals_MealsLoading__UmYIn\",\"MealsError\":\"AvailableMeals_MealsError__38x-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__zSTUo\",\"main-image\":\"Header_main-image__2Q3So\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3iXHD\",\"modal\":\"Modal_modal__30MRu\",\"slide-down\":\"Modal_slide-down__294fH\"};","module.exports = __webpack_public_path__ + \"static/media/meals.37c4943d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__22zUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1te4P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__HkNJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__32qVd\"};","import React from 'react';\n\nconst CartContext = React.createContext({\n\tshowCart: false,\n\tonShowCart: () => {},\n\tonHideCart: () => {},\n\tmenuItems: [],\n\tisLoading: false,\n\thttpErrorMsg: null,\n\tclearCart: () => {},\n\n\tcartItems: [],\n\ttotalAmount: 0,\n\taddItem: (item) => {},\n\tremoveItem: (id) => {},\n});\n\nexport default CartContext;\n","import React from 'react'\nconst CartIcon = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      viewBox='0 0 20 20'\n      fill='currentColor'\n    >\n      <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\n    </svg>\n  );\n};\n\nexport default CartIcon;","import React, { useContext, useEffect, useState } from 'react';\nimport CartContext from '../../store/cart-context';\nimport CartIcon from '../Cart/CartIcon';\nimport classes from './HeaderCartButton.module.css';\n\nconst HeaderCartButton = (props) => {\n\tconst cartCtx = useContext(CartContext);\n\tconst [bumpAnimation, setBumpAnimation] = useState(true);\n\n\t// Add quantity of all the items in the cart and gets total quantity\n\tconst numberOfCartItems = cartCtx.cartItems.reduce(\n\t\t(curNumber, item) => curNumber + item.displayQuantity,\n\t\t0\n\t);\n\n\tconst { showCart } = cartCtx;\n\t// Displays the bump animation for the cart everytime an item is added to the cart\n\tuseEffect(() => {\n    \n\t\t// to disable bump animation if the cart modal is shown\n\t\tif (showCart) return;\n\n\t\tsetBumpAnimation(true);\n\t\tconst timer = setTimeout(() => {\n\t\t\tsetBumpAnimation(false);\n\t\t}, 300);\n\n\t\treturn () => clearTimeout(timer);\n\t}, [numberOfCartItems, showCart]);\n\n\tconst btnClasses = `${classes.button} ${bumpAnimation && classes.bump}`;\n\n\treturn (\n\t\t<button onClick={cartCtx.onShowCart} className={btnClasses}>\n\t\t\t<span className={classes.icon}>\n\t\t\t\t<CartIcon />\n\t\t\t</span>\n\t\t\t<span>Cart</span>\n\t\t\t<span className={classes.badge}>{numberOfCartItems}</span>\n\t\t</button>\n\t);\n};\n\nexport default HeaderCartButton;\n","import React, { Fragment } from 'react';\n\nimport HeaderCartButton from './HeaderCartButton';\nimport mealsImage from '../../assets/meals.jpg';\nimport classes from './Header.module.css';\n\nconst Header = (props) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<header className={classes.header}>\n\t\t\t\t<h1>Delicious Meals</h1>\n\t\t\t\t<HeaderCartButton />\n\t\t\t</header>\n\t\t\t<div className={classes['main-image']}>\n\t\t\t\t<img src={mealsImage} alt='Delicious food' />\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nexport default Header;\n","import React from 'react'\nimport classes from './MealsSummary.module.css'\n\nconst MealsSummary = () => {\n  return (\n    <section className={classes.summary}>\n      <h2>Delicious Food, Delivered To You</h2>\n      <p>\n        Choose your favorite meal from our broad selection of available meals\n        and enjoy a delicious lunch or dinner at home.\n      </p>\n      <p>\n        All our meals are cooked with high-quality ingredients, just-in-time and\n        of course by experienced chefs!\n      </p>\n    </section>\n  )\n}\n\nexport default MealsSummary\n","import React from 'react';\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n\treturn <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\nimport classes from './Input.module.css';\n\nconst Input = React.forwardRef((props, ref) => {\n\treturn (\n\t\t<div className={classes.input}>\n\t\t\t<label htmlFor={props.input.id}>{props.label}</label>\n\t\t\t<input ref={ref} {...props.input} />\n\t\t</div>\n\t);\n});\n\nexport default Input;\n","import React, { useState, useRef } from 'react';\nimport Input from '../../UI/Input/Input';\nimport classes from './MealItemForm.module.css';\n\nconst MealItemForm = (props) => {\n\tconst [quantityIsValid, SetQuantityIsValid] = useState(true);\n\n\tconst quantityInputRef = useRef();\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault();\n\t\tconst enteredQuantity = quantityInputRef.current.value;\n\t\tconst enteredQuantityNumber = +enteredQuantity;\n\t\tif (\n\t\t\tenteredQuantity.trim().length === 0 ||\n\t\t\tenteredQuantityNumber < 1 ||\n\t\t\tenteredQuantityNumber > 5\n\t\t) {\n\t\t\tSetQuantityIsValid(false);\n\t\t\treturn;\n\t\t}\n\t\tprops.onAddToCart(enteredQuantityNumber);\n\t};\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={submitHandler}>\n\t\t\t<Input\n\t\t\t\tref={quantityInputRef}\n\t\t\t\tlabel='Quantity'\n\t\t\t\tinput={{\n\t\t\t\t\tid: 'quantity_' + props.id,\n\t\t\t\t\ttype: 'number',\n\t\t\t\t\tmin: '1',\n\t\t\t\t\tmax: '5',\n\t\t\t\t\tstep: '1',\n\t\t\t\t\tdefaultValue: '1',\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<button>+ Add</button>\n\t\t\t{!quantityIsValid && <p>Please enter a valid number (1-5)</p>}\n\t\t</form>\n\t);\n};\n\nexport default MealItemForm;\n","import React, { useContext } from 'react';\nimport MealItemForm from './MealItemForm';\nimport classes from './MealItem.module.css';\nimport CartContext from '../../../store/cart-context';\n\nconst MealItem = ({ id, name, description, price }) => {\n\tconst cartCtx = useContext(CartContext);\n\tconst addToCartHandler = (quantity) => {\n\t\t// console.log(id, name, quantity, price);\n\t\tcartCtx.addItem({\n\t\t\tid,\n\t\t\tname,\n\t\t\tquantity,\n\t\t\tprice,\n\t\t});\n\t};\n\treturn (\n\t\t<li className={classes.meal}>\n\t\t\t<div>\n\t\t\t\t<h3>{name}</h3>\n\t\t\t\t<div className={classes.description}>{description}</div>\n\t\t\t\t<div className={classes.price}>${price.toFixed(2)}</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<MealItemForm id={id} onAddToCart={addToCartHandler} />\n\t\t\t</div>\n\t\t</li>\n\t);\n};\n\nexport default MealItem;\n","import React, { useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport CartContext from '../../store/cart-context';\n\nconst AvailableMeals = () => {\n\tconst mealsCtx = useContext(CartContext);\n\tif (mealsCtx.isLoading) {\n\t\treturn (\n\t\t\t<section className={classes.MealsLoading}>\n\t\t\t\t<p>Loading...</p>;\n\t\t\t</section>\n\t\t);\n\t}\n\n\tif (mealsCtx.httpErrorMsg) {\n\t\treturn (\n\t\t\t<section className={classes.MealsError}>\n\t\t\t\t<p>{mealsCtx.httpErrorMsg}</p>\n\t\t\t</section>\n\t\t);\n\t}\n\n\tconst mealsList = mealsCtx.menuItems.map((meal) => (\n\t\t<MealItem\n\t\t\tkey={meal.id}\n\t\t\tid={meal.id}\n\t\t\tname={meal.name}\n\t\t\tdescription={meal.description}\n\t\t\tprice={meal.price}>\n\t\t\t{meal.name}\n\t\t</MealItem>\n\t));\n\treturn (\n\t\t<section className={classes.meals}>\n\t\t\t<Card>\n\t\t\t\t<ul>{mealsList}</ul>\n\t\t\t</Card>\n\t\t</section>\n\t);\n};\n\nexport default AvailableMeals;\n","import React, { Fragment } from 'react';\nimport MealsSummary from './MealsSummary'\nimport AvailableMeals from './AvailableMeals';\n\nconst Meals = () => {\n\treturn <Fragment>\n    <MealsSummary/>\n    <AvailableMeals/>\n  </Fragment>\n  ;\n};\n\nexport default Meals;\n","import React, { Fragment } from 'react';\nimport reactDom from 'react-dom';\n\nimport classes from './Modal.module.css';\n\nconst Backdrop = (props) => (\n\t<div onClick={props.onClick} className={classes.backdrop}></div>\n);\nconst ModalOverlay = (props) => (\n\t<div className={classes.modal}>{props.children}</div>\n);\n\nconst portalBackdropEl = document.querySelector('#root-backdrop');\nconst portalOverlayEl = document.querySelector('#root-overlay');\n\nconst Modal = (props) => {\n\treturn (\n\t\t<Fragment>\n\t\t\t{reactDom.createPortal(\n\t\t\t\t<Backdrop onClick={props.onClick} />,\n\t\t\t\tportalBackdropEl\n\t\t\t)}\n\t\t\t{reactDom.createPortal(\n\t\t\t\t<ModalOverlay>{props.children}</ModalOverlay>,\n\t\t\t\tportalOverlayEl\n\t\t\t)}\n\t\t</Fragment>\n\t);\n};\n\nexport default Modal;\n","import React from 'react';\nimport classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li className={classes['cart-item']}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.quantity}>x {props.quantity}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>−</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useReducer } from 'react';\n\nconst initialInputState = {\n\tenteredData: '',\n\tisTouched: false,\n};\n\nconst inputStateReducer = (state, action) => {\n\tif (action.type === 'INPUT') {\n\t\treturn {\n\t\t\tenteredData: action.value,\n\t\t\tisTouched: state.isTouched,\n\t\t};\n\t}\n\tif (action.type === 'BLUR') {\n\t\treturn {\n\t\t\tenteredData: state.enteredData,\n\t\t\tisTouched: true,\n\t\t};\n\t}\n\tif (action.type === 'RESET') {\n\t\treturn initialInputState;\n\t}\n\n\treturn {\n\t\tenteredData: '',\n\t\tisTouched: false,\n\t};\n};\n\nconst useInput = (checkValidity) => {\n\tconst [inputState, dispatch] = useReducer(\n\t\tinputStateReducer,\n\t\tinitialInputState\n\t);\n\n\tconst enteredDataIsValid = checkValidity(inputState.enteredData);\n\n\tconst hasError = !enteredDataIsValid && inputState.isTouched;\n\n\tconst inputChangeHandler = (e) => {\n\t\tdispatch({ type: 'INPUT', value: e.target.value });\n\t};\n\n\tconst inputBlurHandler = (e) => {\n\t\tdispatch({ type: 'BLUR' });\n\t};\n\n\tconst reset = () => {\n\t\tdispatch({ type: 'RESET' });\n\t};\n\n\tconst inputTouched = () => {\n\t\tdispatch({ type: 'BLUR' });\n\t};\n\n\t// const dataInputClasses = hasError ? 'form-control invalid' : 'form-control';\n\n\treturn {\n\t\tenteredData: inputState.enteredData,\n\t\tenteredDataIsValid,\n\t\thasError,\n\t\tinputChangeHandler,\n\t\tinputBlurHandler,\n\t\tinputTouched,\n\t\treset,\n\t};\n};\n\nexport default useInput;\n","import React from 'react';\nimport useInput from '../hooks/use-input';\nimport classes from './Checkout.module.css';\n\nconst isNotEmpty = (value) => value.trim() !== '';\nconst isSixChars = (value) => value.trim().length === 6;\n\nconst Checkout = (props) => {\n\tconst {\n\t\tenteredData: enteredName,\n\t\tenteredDataIsValid: enteredNameIsValid,\n\t\thasError: nameInputIsInvalid,\n\t\tinputChangeHandler: inputNameChangeHandler,\n\t\tinputBlurHandler: inputNameBlurHandler,\n\t\tinputTouched: nameInputTouched,\n\t\treset: resetName,\n\t} = useInput(isNotEmpty);\n\n\tconst {\n\t\tenteredData: enteredStreet,\n\t\tenteredDataIsValid: enteredStreetIsValid,\n\t\thasError: streetInputIsInvalid,\n\t\tinputChangeHandler: inputStreetChangeHandler,\n\t\tinputBlurHandler: inputStreetBlurHandler,\n\t\tinputTouched: streetInputTouched,\n\t\treset: resetStreet,\n\t} = useInput(isNotEmpty);\n\n\tconst {\n\t\tenteredData: enteredPostalCode,\n\t\tenteredDataIsValid: enteredPostalCodeIsValid,\n\t\thasError: postalCodeInputIsInvalid,\n\t\tinputChangeHandler: inputPostalCodeChangeHandler,\n\t\tinputBlurHandler: inputPostalCodeBlurHandler,\n\t\tinputTouched: postalCodeInputTouched,\n\t\treset: resetPostalCode,\n\t} = useInput(isSixChars);\n\n\tconst {\n\t\tenteredData: enteredCity,\n\t\tenteredDataIsValid: enteredCityIsValid,\n\t\thasError: cityInputIsInvalid,\n\t\tinputChangeHandler: inputCityChangeHandler,\n\t\tinputBlurHandler: inputCityBlurHandler,\n\t\tinputTouched: cityInputTouched,\n\t\treset: resetCity,\n\t} = useInput(isNotEmpty);\n\n\tlet formIsValid = false;\n\n\tif (\n\t\tenteredNameIsValid &&\n\t\tenteredStreetIsValid &&\n\t\tenteredPostalCodeIsValid &&\n\t\tenteredCityIsValid\n\t) {\n\t\tformIsValid = true;\n\t}\n\n\tconst confirmHandler = (e) => {\n\t\te.preventDefault();\n\n\t\t// shows error if user submits it directly without touching the input field\n\t\tnameInputTouched();\n\t\tstreetInputTouched();\n\t\tpostalCodeInputTouched();\n\t\tcityInputTouched();\n\n\t\tif (!formIsValid) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Send user data to Cart\n\t\tprops.onConfirm({\n\t\t\tname: enteredName,\n\t\t\tstreet: enteredStreet,\n\t\t\tcity: enteredCity,\n\t\t\tpostalCode: enteredPostalCode,\n\t\t});\n\t\tconsole.log('form has been submitted');\n\n\t\tresetName();\n\t\tresetStreet();\n\t\tresetPostalCode();\n\t\tresetCity();\n\t};\n\n\t// Add invalid classes to input fields if input is not valid\n\tconst nameControlClasses = `${classes.control} ${\n\t\tnameInputIsInvalid ? classes.invalid : ''\n\t}`;\n\tconst streetControlClasses = `${classes.control} ${\n\t\tstreetInputIsInvalid ? classes.invalid : ''\n\t}`;\n\tconst postalCodeControlClasses = `${classes.control} ${\n\t\tpostalCodeInputIsInvalid ? classes.invalid : ''\n\t}`;\n\tconst cityControlClasses = `${classes.control} ${\n\t\tcityInputIsInvalid ? classes.invalid : ''\n\t}`;\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={confirmHandler}>\n\t\t\t<div className={nameControlClasses}>\n\t\t\t\t<label htmlFor='name'>Your Name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='name'\n\t\t\t\t\tonChange={inputNameChangeHandler}\n\t\t\t\t\tonBlur={inputNameBlurHandler}\n\t\t\t\t\tvalue={enteredName}\n\t\t\t\t/>\n\t\t\t\t<p>Please enter a valid name</p>\n\t\t\t</div>\n\t\t\t<div className={streetControlClasses}>\n\t\t\t\t<label htmlFor='street'>Street</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='street'\n\t\t\t\t\tonChange={inputStreetChangeHandler}\n\t\t\t\t\tonBlur={inputStreetBlurHandler}\n\t\t\t\t\tvalue={enteredStreet}\n\t\t\t\t/>\n\t\t\t\t<p>Please enter a valid street name</p>\n\t\t\t</div>\n\t\t\t<div className={postalCodeControlClasses}>\n\t\t\t\t<label htmlFor='postal'>Postal Code</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='postal'\n\t\t\t\t\tonChange={inputPostalCodeChangeHandler}\n\t\t\t\t\tonBlur={inputPostalCodeBlurHandler}\n\t\t\t\t\tvalue={enteredPostalCode}\n\t\t\t\t/>\n\t\t\t\t<p>Please enter a valid Postal Code (6 characters long)</p>\n\t\t\t</div>\n\t\t\t<div className={cityControlClasses}>\n\t\t\t\t<label htmlFor='city'>City</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='city'\n\t\t\t\t\tonChange={inputCityChangeHandler}\n\t\t\t\t\tonBlur={inputCityBlurHandler}\n\t\t\t\t\tvalue={enteredCity}\n\t\t\t\t/>\n\t\t\t\t<p>Please enter a valid city name</p>\n\t\t\t</div>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button type='button' onClick={props.onCancel}>\n\t\t\t\t\tBack\n\t\t\t\t</button>\n\t\t\t\t<button className={classes.submit}>Confirm</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default Checkout;\n","import React, { Fragment, useContext, useState } from 'react';\nimport CartContext from '../../store/cart-context';\nimport Modal from '../UI/Modal/Modal';\nimport CartItem from './CartItem';\nimport Checkout from './Checkout';\nimport classes from './Cart.module.css';\n\nconst Cart = (props) => {\n\tconst cartCtx = useContext(CartContext);\n\tconst [isCheckout, setIsCheckout] = useState(false);\n\tconst [isSubmitting, setIsSubmitting] = useState(false);\n\tconst [didSubmit, setDidSubmit] = useState(false);\n\n\tconst totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n\tconst hasItems = cartCtx.cartItems.length > 0;\n\n\t// Return early so that cart stays hidden until the cart button is pressed\n\tif (cartCtx.showCart === false) return null;\n\n\tconst cartItemRemoveHandler = (id) => {\n\t\tcartCtx.removeItem(id);\n\t};\n\n\tconst cartItemAddHandler = (item) => {\n\t\titem.quantity = 1;\n\t\tcartCtx.addItem(item);\n\t};\n\n\tconst orderHandler = () => {\n\t\tsetIsCheckout(true);\n\t};\n\n\tconst cancelOrderHandler = () => {\n\t\tsetIsCheckout(false);\n\t};\n\n\t// Submit data to backend server\n\tconst submitOrderHandler = async (userData) => {\n\t\tsetIsSubmitting(true);\n\t\tawait fetch(\n\t\t\t`https://food-order-app-4fc86-default-rtdb.firebaseio.com/order.json`,\n\t\t\t{\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tuser: userData,\n\t\t\t\t\torderedItems: cartCtx.cartItems,\n\t\t\t\t}),\n\t\t\t}\n\t\t);\n\n\t\tsetIsSubmitting(false);\n\t\tsetDidSubmit(true);\n\t};\n\n\t//  Reset cart items, hide the success message, and show the original cart modal\n\tconst clearCartHandler = () => {\n\t\tsetDidSubmit(false);\n\t\tsetIsCheckout(false);\n\t\tcartCtx.clearCart();\n\t\tcartCtx.onHideCart();\n\t};\n\n\t// Cart contents read from cartCtx\n\tconst cartItems = (\n\t\t<ul className={classes['cart-items']}>\n\t\t\t{cartCtx.cartItems.map((item) => (\n\t\t\t\t<CartItem\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tname={item.name}\n\t\t\t\t\tquantity={item.displayQuantity}\n\t\t\t\t\tprice={item.price}\n\t\t\t\t\tonRemove={cartItemRemoveHandler.bind(null, item.id)}\n\t\t\t\t\tonAdd={cartItemAddHandler.bind(null, item)}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</ul>\n\t);\n\n\t// Buttons for the original modal content\n\tconst modalActions = (\n\t\t<div className={classes.actions}>\n\t\t\t<button onClick={cartCtx.onHideCart} className={classes['button--alt']}>\n\t\t\t\tClose\n\t\t\t</button>\n\t\t\t{hasItems && (\n\t\t\t\t<button onClick={orderHandler} className={classes.button}>\n\t\t\t\t\tOrder\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t);\n\n\t// Original Modal Content\n\tconst cartModalContent = (\n\t\t<Fragment>\n\t\t\t{!isCheckout && cartItems}\n\t\t\t<div className={classes.total}>\n\t\t\t\t<span>Total Amount</span>\n\t\t\t\t<span>{totalAmount}</span>\n\t\t\t</div>\n\t\t\t{isCheckout && (\n\t\t\t\t<Checkout\n\t\t\t\t\tonConfirm={submitOrderHandler}\n\t\t\t\t\tonCancel={cancelOrderHandler}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{!isCheckout && modalActions}\n\t\t</Fragment>\n\t);\n\n\t// Model Content while the data is being transmitted\n\tconst isSubmittingModalContent = <p>Sending order data...</p>;\n\n\t// Model Content after successfully transmitting data\n\tconst didSubmitModalContent = (\n\t\t<Fragment>\n\t\t\t<p>Successfully sent the order!</p>\n\t\t\t<div className={classes.actions}>\n\t\t\t\t<button onClick={clearCartHandler} className={classes.button}>\n\t\t\t\t\tClose\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n\n\treturn (\n\t\t<Modal onClick={cartCtx.onHideCart}>\n\t\t\t{!isSubmitting && !didSubmit && cartModalContent}\n\t\t\t{isSubmitting && isSubmittingModalContent}\n\t\t\t{!isSubmitting && didSubmit && didSubmitModalContent}\n\t\t</Modal>\n\t);\n};\n\nexport default Cart;\n","import React, { Fragment } from 'react';\nimport Header from './components/Layout/Header';\nimport Meals from './components/Meals/Meals';\nimport Cart from './components/Cart/Cart';\n\nconst App = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Cart />\n\t\t\t<Header />\n\t\t\t<main>\n\t\t\t\t<Meals />\n\t\t\t</main>\n\t\t</Fragment>\n\t);\n};\n\nexport default App;\n","import React, { useState, useReducer, useEffect } from 'react';\nimport CartContext from './cart-context';\n\nconst initializeCartState = {\n\titems: [],\n\ttotalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n\tif (action.type === 'ADD') {\n\t\tconst addedItemIndex = state.items.findIndex(\n\t\t\t(item) => item.id === action.item.id\n\t\t);\n\t\tlet updatedItems;\n\t\t// Check if item already exist\n\t\t// If item exists, increase quanity, else, add item\n\t\tif (addedItemIndex === -1) {\n\t\t\tconst updatedItem = {\n\t\t\t\t...action.item,\n\t\t\t\tdisplayQuantity: action.item.quantity,\n\t\t\t};\n\t\t\tupdatedItems = state.items.concat(updatedItem);\n\t\t} else {\n\t\t\tupdatedItems = [...state.items];\n\t\t\tupdatedItems[addedItemIndex].displayQuantity += action.item.quantity;\n\t\t}\n\t\tconst updatedTotalAmount =\n\t\t\tstate.totalAmount + action.item.price * action.item.quantity;\n\t\treturn {\n\t\t\titems: updatedItems,\n\t\t\ttotalAmount: updatedTotalAmount,\n\t\t};\n\t}\n\n\tif (action.type === 'REMOVE') {\n\t\tconst addedItemIndex = state.items.findIndex(\n\t\t\t(item) => item.id === action.id\n\t\t);\n\t\tlet updatedTotalAmount;\n\t\tlet updatedItems = [...state.items];\n\n\t\t// Decrease quanity by one if quanity is >1\n\t\t// Remove the item if quantity =1\n\t\tif (updatedItems[addedItemIndex].displayQuantity > 1) {\n\t\t\tupdatedItems[addedItemIndex].displayQuantity--;\n\t\t\tupdatedTotalAmount =\n\t\t\t\tstate.totalAmount - updatedItems[addedItemIndex].price;\n\t\t} else {\n\t\t\tupdatedTotalAmount =\n\t\t\t\tstate.totalAmount - updatedItems[addedItemIndex].price;\n\t\t\tupdatedItems.splice(addedItemIndex, 1);\n\t\t}\n\n\t\treturn {\n\t\t\titems: updatedItems,\n\t\t\ttotalAmount: updatedTotalAmount,\n\t\t};\n\t}\n\n\tif (action.type === 'CLEAR') {\n\t\treturn initializeCartState;\n\t}\n};\n\nconst CartProvider = (props) => {\n\t// Set default cart state equal to data stored in Local storage (if no data, initialize cart state )\n\tconst storedCartState = JSON.parse(localStorage.getItem('cart-item'));\n\tconst defaultCartState = storedCartState\n\t\t? storedCartState\n\t\t: initializeCartState;\n\n\tconst [cartState, dispatchCartAction] = useReducer(\n\t\tcartReducer,\n\t\tdefaultCartState\n\t);\n\n\t// Store cart data to local storage\n\tuseEffect(\n\t\t() => localStorage.setItem('cart-item', JSON.stringify(cartState)),\n\t\t[cartState]\n\t);\n\n\tconst [showCart, setShowCart] = useState(false);\n\n\tconst showCartHandler = () => {\n\t\tsetShowCart(true);\n\t};\n\tconst hideCartHandler = () => {\n\t\tsetShowCart(false);\n\t};\n\n\t// const menu = [\n\t// \t{\n\t// \t\tid: 'm1',\n\t// \t\tname: 'Sushi',\n\t// \t\tdescription: 'Finest fish and veggies',\n\t// \t\tprice: 22.99,\n\t// \t},\n\t// \t{\n\t// \t\tid: 'm2',\n\t// \t\tname: 'Schnitzel',\n\t// \t\tdescription: 'A german specialty!',\n\t// \t\tprice: 16.5,\n\t// \t},\n\t// \t{\n\t// \t\tid: 'm3',\n\t// \t\tname: 'Barbecue Burger',\n\t// \t\tdescription: 'American, raw, meaty',\n\t// \t\tprice: 12.99,\n\t// \t},\n\t// \t{\n\t// \t\tid: 'm4',\n\t// \t\tname: 'Green Bowl',\n\t// \t\tdescription: 'Healthy...and green...',\n\t// \t\tprice: 18.99,\n\t// \t},\n\t// ];\n\n\t// Load menu from Firebase backend server\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [httpErrorMsg, setHttpErrorMsg] = useState(false);\n\tconst [menu, setMenu] = useState([]);\n\tuseEffect(() => {\n\t\tsetIsLoading(true);\n\t\tconst fetchMenu = async () => {\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://food-order-app-4fc86-default-rtdb.firebaseio.com/menu.json`\n\t\t\t);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error('Something went wrong!');\n\t\t\t}\n\t\t\tconst responseData = await response.json();\n\t\t\tconst loadedMeals = [];\n\n\t\t\tfor (const key in responseData) {\n\t\t\t\tloadedMeals.push({\n\t\t\t\t\tid: key,\n\t\t\t\t\tname: responseData[key].name,\n\t\t\t\t\tdescription: responseData[key].description,\n\t\t\t\t\tprice: responseData[key].price,\n\t\t\t\t});\n\t\t\t}\n\t\t\tsetMenu(loadedMeals);\n\t\t\tsetIsLoading(false);\n\t\t};\n\n\t\tfetchMenu().catch((error) => {\n\t\t\tsetIsLoading(false);\n\t\t\tsetHttpErrorMsg(error.message);\n\t\t});\n\t}, []);\n\n\tconst addItemToCartHandler = (item) => {\n\t\tdispatchCartAction({ type: 'ADD', item: item });\n\t};\n\tconst removeItemFromCartHandler = (id) => {\n\t\tdispatchCartAction({ type: 'REMOVE', id: id });\n\t};\n\n\tconst clearCartHandler = () => {\n\t\tdispatchCartAction({ type: 'CLEAR' });\n\t};\n\n\tconst cartContext = {\n\t\tshowCart: showCart,\n\t\tonShowCart: showCartHandler,\n\t\tonHideCart: hideCartHandler,\n\t\tmenuItems: menu,\n\t\tisLoading,\n\t\thttpErrorMsg,\n\t\tclearCart: clearCartHandler,\n\n\t\tcartItems: cartState.items,\n\t\ttotalAmount: cartState.totalAmount,\n\t\taddItem: addItemToCartHandler,\n\t\tremoveItem: removeItemFromCartHandler,\n\t};\n\n\treturn (\n\t\t<CartContext.Provider value={cartContext}>\n\t\t\t{props.children}\n\t\t</CartContext.Provider>\n\t);\n};\n\nexport default CartProvider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport CartProvider from './store/CartProvider';\n\nReactDOM.render(\n\t<CartProvider>\n\t\t<App />\n\t</CartProvider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}